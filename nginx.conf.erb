
set $environment <%= ENV['ENVIRONMENT'] %>;
set $maintenance_mode <%= ENV['MAINTENANCE'] %>;
set $api_proto <%= ENV['API_PROTO'] %>;
set $api_fqdn <%= ENV['API_FQDN'] %>;

# XXX set the $application_branch variable in integration environment
# in this case, the environment is the branch part of <branch>.integration.pix.fr
if ($http_host ~* "^(?<application_branch>.+)\.<%= ENV['FQDN'] %>$") {
    set $api_branch "$application_branch.";
}

# set the $application_branch variable for production and staging cases
if ($environment != integration) {
    set $application_branch $environment;
    set $api_branch "";
}
resolver 1.1.1.1;

set $uri_with_query_params "$uri$is_args$query_string";

# static assets. Fetch the asset on gituhb
location ~* ".*\.\w{1,5}$" {
    if ($maintenance_mode = enabled) {
        return 503;
    }
    proxy_pass https://1024pix.github.io/pix/live/$application_branch$uri_with_query_params;
    proxy_redirect https://1024pix.github.io/pix/live/$application_branch https://$http_host;
}

# API
location /api {
    if ($maintenance_mode = enabled) {
        return 503;
    }
    proxy_pass $api_proto://$api_branch$api_fqdn$uri_with_query_params;
    proxy_redirect $api_proto://$api_branch$api_fqdn/ https://$http_host/;
}

# dynamic pages rendered client-side. Always fetch index.html on github
location / {
    if ($maintenance_mode = enabled) {
        return 503;
    }

    proxy_pass https://1024pix.github.io/pix/live/$application_branch/$is_args$query_string;
    proxy_redirect https://1024pix.github.io/pix/live/$application_branch https://$http_host;
}

# Error pages.
error_page 503 /maintenance_page.html;
location = /maintenance_page.html {
    root /app;
}
